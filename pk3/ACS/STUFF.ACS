#library "STUFF"
#include "zcommon.acs"


#define SUBTRACT_OFFSET 1
#define SCREEN_RATIO 2
function int round_zan(int fixedNumber)
{
	return (fixedNumber + 0.5) >> 16;
}

function int get_widescreen_xoffset(int width, int height, int xoffset, int option)
{
	int scr_width = GetScreenWidth() << 16;
	int scr_height = GetScreenHeight() << 16;
	
	int x_difference = (FixedDiv(scr_width, scr_height) * height)-(width << 16);
	
	if(option == SUBTRACT_OFFSET)
	{
		return round_zan((xoffset << 16)-FixedDiv(x_difference, 2.0)) << 16;
	}
	else if (option == SCREEN_RATIO)
	{
		return round_zan((xoffset << 16)-x_difference) << 16;
	}
	
	return round_zan((xoffset << 16)+FixedDiv(x_difference, 2.0)) << 16;
}

script 999 ENTER
{
	int Paintball = GetCVar("paintballvar");
	if(Paintball == 1)
	{
		GiveInventory("PaintBallMode", 1);
		Print(s:"Paintball Mode \cdON");
	}
}

script 998 RESPAWN
{
	GiveInventory("RespawnCheck", 1);
	int Paintball = GetCVar("paintballvar");
	if(Paintball == 1)
	{
		GiveInventory("PaintBallMode", 1);
	}
}

script 997 (void)
{
	int Paintball = GetCVar("paintballvar");
	if(Paintball == 1)
	{
		GiveActorInventory(0, "PaintBallMode", 1);
		PrintBold(s:"Paintball Mode \cdON");
	}
	if(Paintball == 0)
	{
		TakeActorInventory(0, "PowerWeaponLevel2", 1);
		PrintBold(s:"Paintball Mode \cgOFF");
	}
}

script 996 (void) CLIENTSIDE
{
	LocalAmbientSound("misc/goldeneye_damage", 127);
	delay(4);
}

script 995 DEATH CLIENTSIDE
{
	LocalAmbientSound("misc/goldeneye_death", 127);
}

script 923 ENTER CLIENTSIDE
{
	int OpenGL = GetCVar("vid_renderer");
	if(OpenGL == 0)
	{
		SetFont("DOOMFONT");
		hudmessage(s:"\cgNOTICE!\cf: \cc THIS MOD RUNS BEST IN \cgOPENGL!\n\ccFeel free to stay in software, but expect it to look and run like ass.";
		HUDMSG_FADEINOUT | HUDMSG_LOG, 0, CR_RED, 1.5, 0.5, 6.0, 2.0, 2.0);
	}
}

str BloodFrames[40] = {
	"BLUDSC01",
	"BLUDSC02",
	"BLUDSC03",
	"BLUDSC04",
	"BLUDSC05",
	"BLUDSC06",
	"BLUDSC07",
	"BLUDSC08",
	"BLUDSC09",
	"BLUDSC10",
	"BLUDSC11",
	"BLUDSC12",
	"BLUDSC13",
	"BLUDSC14",
	"BLUDSC15",
	"BLUDSC16",
	"BLUDSC17",
	"BLUDSC18",
	"BLUDSC19",
	"BLUDSC20",
	"BLUDSC21",
	"BLUDSC22",
	"BLUDSC23",
	"BLUDSC24",
	"BLUDSC25",
	"BLUDSC26",
	"BLUDSC27",
	"BLUDSC28",
	"BLUDSC29",
	"BLUDSC30",
	"BLUDSC31",
	"BLUDSC32",
	"BLUDSC33",
	"BLUDSC34",
	"BLUDSC35",
	"BLUDSC36",
	"BLUDSC37",
	"BLUDSC38",
	"BLUDSC39",
	"BLUDSC40"
};

int Frame = -1;

script 921 DEATH CLIENTSIDE
{
	if((ConsolePlayerNumber() != PlayerNumber()) || (ConsolePlayerNumber() == -1))
	{
		Terminate;
	}
	
	SetHudSize(get_widescreen_xoffset(96, 80, 96, SCREEN_RATIO) >> 16, 80, true);
	Frame = 0;
 
	while(Frame < 40 && Frame != -1) 
	{
		if(Frame != -1)
		{
			SetFont(BloodFrames[Frame]);
			Hudmessage(s:"a"; HUDMSG_FADEOUT, 2, CR_UNTRANSLATED, get_widescreen_xoffset(96, 80, 0, SUBTRACT_OFFSET)+0.1, 0.1, 1.0, 0.0);
		}
		Delay(2);
		if(Frame != -1)
		{
			Frame++;
		}
	}
	 
	if(Frame >= 40)
	{
		HudMessage(s:"a";
		HUDMSG_FADEOUT, 2, CR_UNTRANSLATED, get_widescreen_xoffset(96, 80, 0, SUBTRACT_OFFSET)+0.1, 0.1, 0.0, 8.0);
		Frame = -1;
	}
	else
	{
		HudMessage(s:""; HUDMSG_FADEOUT, 2, CR_UNTRANSLATED, 0.1, 0.1, 0.0, 0.0);
		Frame = -1;
	}
}

script 920 RESPAWN CLIENTSIDE
{
	if((ConsolePlayerNumber() != PlayerNumber()) || (ConsolePlayerNumber() == -1))
	{
		Terminate;
	}
	
	HudMessage(s:""; HUDMSG_FADEOUT, 2, CR_UNTRANSLATED, 0.1, 0.1, 0.0, 0.0);
	Frame = -1;
}
